(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{430:function(t,a,s){"use strict";s.r(a);var e=s(42),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_1017-1023"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1017-1023"}},[t._v("#")]),t._v(" 1017 ~ 1023")]),t._v(" "),s("h2",{attrs:{id:"_1018-mysql-explain-실행계획-사용법-및-분석"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1018-mysql-explain-실행계획-사용법-및-분석"}},[t._v("#")]),t._v(" 1018 - MySQL Explain 실행계획 사용법 및 분석")]),t._v(" "),s("h3",{attrs:{id:"mysql-explain란"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql-explain란"}},[t._v("#")]),t._v(" MySQL Explain란?")]),t._v(" "),s("p",[t._v("MySQL 튜닝에서 가장 중요한 것은 쿼리와 스키마 최적화이다. 스키마 설꼐는 한번 진행되면 그 테이블을 사용하는 모든 쿼리에 영향을 주기 때문에 좀처럼 변경하기 힘들지만 쿼리는 해당 쿼리만 수정하면 되므로 변경하기 쉽다. Slow Query를 없애는 것은 성능을 향상 시키기 위한 매우 중요한 수단이므로 어플리케이션의 성능을 향상시키고 싶다면 우선적으로 쿼리의 튜닝을 컴토해봐야 한다."),s("br"),t._v("\n성능 진단의 가장 첫걸음은 실행한 SQL이 DB에서 어떻게 처리되는지를 파악하는 것이다. 사람이 이해할 수 있는 언어로 구성된 SQL을 실행하도록 DB에 명령을 내리면 DB는 내부적으로 SQL 파싱(문법 체크 및 DB에서 실행하기 위한 형태로 변환하는 단계)을 하고 옵티마이징(데이터를 찾는 가장 빠른 방법을 찾아내는 단계)을 거친 후 실제로 데이터를 찾는다. 사용자가 느끼기에는 SQL만으로 모든 조작이 이루어지는 것처럼 보이나 실제로는 조금이라도 빠르게 데이터를 찾아내기 위해 DB 내부적으로는 의외로 많은 단계를 거친다."),s("br"),t._v("\nMySQL Explain 이란 DB가 데이터를 찾아가는 일련의 과정을 사람이 알아보기 쉽게 DB 결과 셋으로 보여주는것이다. MySQL Explain을 활용하여 기존의 쿼리를 튜닝할 수 있을 뿐만 아니라 성능 분석, 인덱스 전략 수립 등과 같이 성능 최적화에 대한 전반적인 업무를 처리할 수 있다.")]),t._v(" "),s("h3",{attrs:{id:"mysql-explain-사용방법"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql-explain-사용방법"}},[t._v("#")]),t._v(" MySQL Explain 사용방법")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXTENDED")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("h3",{attrs:{id:"mysql-explain-결과의-각-항목-별-의미"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql-explain-결과의-각-항목-별-의미"}},[t._v("#")]),t._v(" MySQL Explain 결과의 각 항목 별 의미")]),t._v(" "),s("ul",[s("li",[t._v("id : select 아이디로 SELECT를 구분하는 번호")]),t._v(" "),s("li",[t._v("table : 참조하는 테이블")]),t._v(" "),s("li",[t._v("select_type : select에 대한 타입")]),t._v(" "),s("li",[t._v("type : 조인 혹은 조회 타입")]),t._v(" "),s("li",[t._v("possible_keys : 데이터를 조회할 때 DB에서 사용할 수 있는 인덱스 리스트")]),t._v(" "),s("li",[t._v("key : 실제로 사용할 인덱스")]),t._v(" "),s("li",[t._v("key_len : 실제로 사용할 인덱스의 길이")]),t._v(" "),s("li",[t._v("ref : Key 안의 인덱스와 비교하는 컬럼(상수)")]),t._v(" "),s("li",[t._v("rows : 쿼리 실행 시 조사하는 행 수립")]),t._v(" "),s("li",[t._v("extra : 추가 정보")])]),t._v(" "),s("h4",{attrs:{id:"id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#id"}},[t._v("#")]),t._v(" [ id ]")]),t._v(" "),s("p",[t._v("행이 어떤 SELECT 구문을 나타내는 지를 알려주는 것으로 구문에 서브 쿼리나 UNION이 없다면 SELECT는 하나밖에 없기 때문에 모든 행에 대해 1이란 값이 부여되지만 이외의 경우에는 원 구문에서 순서에 따라 각 SELECT 구문들에 순차적으로 번호가 부여된다.")]),t._v(" "),s("h4",{attrs:{id:"table"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table"}},[t._v("#")]),t._v(" [ table ]")]),t._v(" "),s("p",[t._v("행이 어떤 테이블에 접근하는 지를 보여주는 것으로 대부분의 경우 테이블 이름이나 SQL에서 지정된 별명 같은 값을 나타낸다.")]),t._v(" "),s("h4",{attrs:{id:"select-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#select-type"}},[t._v("#")]),t._v(" [ select_type ]")]),t._v(" "),s("ul",[s("li",[t._v("SIMPLE : 단순 SELECT (Union이나 Sub Query가 없는 SELECT 문)")]),t._v(" "),s("li",[t._v("PRIMARY : Sub Query를 사용할 경우 Sub Query의 외부에 있는 쿼리(첫번째 쿼리) UNION을 사용할 경우 UNION의 첫 번째 SELECT 쿼리")]),t._v(" "),s("li",[t._v("UNION : UNION 쿼리에서 Primary를 제외한 나머지 SELECT")])])])}),[],!1,null,null,null);a.default=r.exports}}]);