(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{426:function(a,t,e){"use strict";e.r(t);var n=e(42),s=Object(n.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"_0919-0925"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0919-0925"}},[a._v("#")]),a._v(" 0919 ~ 0925")]),a._v(" "),e("h2",{attrs:{id:"_0919-value와-configurationproperties의-사용법-및-차이"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0919-value와-configurationproperties의-사용법-및-차이"}},[a._v("#")]),a._v(" 0919 - @Value와 @ConfigurationProperties의 사용법 및 차이")]),a._v(" "),e("p",[a._v("Spring에서 프로퍼티에 있는 값을 불러오는 다양한 방법들이 있다. 대표적인 방식으로 @Value와 @ConfigurationProperties가 있다.")]),a._v(" "),e("h3",{attrs:{id:"value와-configurationproperties의-사용법-및-차이"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#value와-configurationproperties의-사용법-및-차이"}},[a._v("#")]),a._v(" @Value와 @ConfigurationProperties의 사용법 및 차이")]),a._v(" "),e("p",[a._v("스프링의 properties나 yaml에 있는 값들은 애플리케이션이 실행되면서 환경변수로 Environment에 등록이 된다. 그리고 해당 값들을 꺼내서 애플리케이션에서 활용하기 위한 방법으로는 @Value와 @ConfigurationProperties가 있다.")]),a._v(" "),e("h4",{attrs:{id:"value-어노테이션"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#value-어노테이션"}},[a._v("#")]),a._v(" [ @Value 어노테이션 ]")]),a._v(" "),e("p",[a._v("@Value는 단일 값을 주입받기 위해서 사용된다. 값을 가져오기 위해서는 PropertyPlaceHolderConfigurer를 통해 ${}을 사용하는 방식과 SpEL을 통해 #{}을 이용하는 방식 크게 2가지를 사용할 수 있다."),e("br"),a._v("\n@Value를 이용해 값을 가져올 때에는 RelaxedBinding이라는 것이 적용되지 않는다. Relaxed Binding이란 프로퍼티 값의 이름이 조금 달라도 유연하게 바인딩을 시켜주는 규칙을 의미한다.")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("server.admin-what-is-real-name=ajs\n")])])]),e("p",[a._v("@Value는 Relaxed Binding이 적용되지 않으므로 완벽히 일치하는 프로퍼티 이름으로만 값을 가져올 수 있따.")]),a._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"${server.admin-what-is-real-name}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" adminName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("ul",[e("li",[a._v("단일 값을 주입받기 위해 사용됨")]),a._v(" "),e("li",[a._v("RelaxedBinding 적용되지 않음")])]),a._v(" "),e("h4",{attrs:{id:"configurationproperties-어노테이션"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configurationproperties-어노테이션"}},[a._v("#")]),a._v(" [ @ConfigurationProperties 어노테이션 ]")]),a._v(" "),e("p",[a._v("@ConfigurationProperties는 프로퍼티에 있는 값을 클래스로 바인딩하기 위해 사용되는 어노테이션이다. @ConfigurationProperties는 값의 바인딩을 위해 Setter를 필요로 하며 생성자가 바인딩하기 위해서는 ConstructorBinding을 붙여주어야 한다.")]),a._v(" "),e("p",[a._v("@ConfigurationProperties를 사용하기 위해서는 @EnableConfigurationProperties에 해당 클래스를 지정해주거나 @ConfigurationPropertiesScan를 통해 스캐닝의 대상이 되도록 해주어야 한다.")]),a._v(" "),e("p",[a._v("@ConfigurationProperties는 기본적을 RelaxedBinding이 적용된다. 예를 들어 위에서 봤던 프로퍼티 값을 불러오고자 한다면 다음과 같이 바인딩해도 된다.")]),a._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Getter")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Setter")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@ConfigurationProperties")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("prefix "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"server"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ServerInfo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" adminWhatIsRealName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);