(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{744:function(a,t,s){"use strict";s.r(t);var r=s(2),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"_0206-0219"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0206-0219"}},[a._v("#")]),a._v(" 0206 ~ 0219")]),a._v(" "),s("h2",{attrs:{id:"_0209-filter를-통한-logging"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0209-filter를-통한-logging"}},[a._v("#")]),a._v(" 0209 - Filter를 통한 Logging")]),a._v(" "),s("h2",{attrs:{id:"_0214-thread-dump와-heap-dump"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0214-thread-dump와-heap-dump"}},[a._v("#")]),a._v(" 0214 - Thread dump와 Heap dump")]),a._v(" "),s("p",[a._v("개방용어로써 dump는 시스템에 저장된 정보를 복사하여 뽑은 것. 또는 그와 같은일로 쓰인다. 일종의 snapshot 개념인데 주로 분석 최적화에 많이 쓰인다. DB dump, Thread dump 등이 있다.")]),a._v(" "),s("h3",{attrs:{id:"thread-dump"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#thread-dump"}},[a._v("#")]),a._v(" Thread Dump")]),a._v(" "),s("ul",[s("li",[a._v("프로세스에 속한 모든 thread들의 상태를 기록한것")]),a._v(" "),s("li",[a._v("여기서 말하는 thread들 중 일부는 JVM 내부 thread 이고 일부는 실행중인 애플리케이션의 thread이다")]),a._v(" "),s("li",[a._v("Thread dump는 발생된 문제들을 진단, 분석하고 jvm 성능을 최적화하는데 필요한 정보를 보여준다")]),a._v(" "),s("li",[a._v("예를 들어 Thread dump는 자동으로 데드락을 표시한다")])]),a._v(" "),s("blockquote",[s("p",[a._v("데드락이란? 운영체제 혹은 소프트웨어의 잘못된 자원 관리로 인하여 둘 이상의 프로세스(심하면 운영체제 자체도 포함)가 함께 멈추어 버리는 현상을 말한다"),s("br"),a._v("\n우리나라 말로 교착상태라고 한다"),s("br"),a._v("\n데드락은 두 개 이상의 Thread에서 작업을 완료하기 위해 상대의 작업이 끝나기를 기다린다")])]),a._v(" "),s("h3",{attrs:{id:"heap-dump"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#heap-dump"}},[a._v("#")]),a._v(" Heap Dump")]),a._v(" "),s("ul",[s("li",[a._v("특정 시점에 JVM heap 영역에 있는 모든 개체의 스냅샷")]),a._v(" "),s("li",[a._v("일반적으로 알고 있는 JVM 구조에서 heap 영역을 생각하면 된다")]),a._v(" "),s("li",[a._v("GC가 힙에서 불필요한 객체를 제거하지 못하는경우 Java VisualVM을 사용하여 해당 객체에 대한 정보를 얻어낼 수 있")])]),a._v(" "),s("h4",{attrs:{id:"heap-dump-떠보기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#heap-dump-떠보기"}},[a._v("#")]),a._v(" "),s("strong",[a._v("[ Heap Dump 떠보기 ]")])]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 실시간 분석하기")]),a._v("\njmap -heap "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("PID"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 파일로 출력하기")]),a._v("\njmap -dump:format"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("b,file"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("FILE_OUTPUT"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("PID"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"_0220-apm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0220-apm"}},[a._v("#")]),a._v(" 0220 - APM")]),a._v(" "),s("h3",{attrs:{id:"_0222-transient"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0222-transient"}},[a._v("#")]),a._v(" 0222 - @Transient")])])}),[],!1,null,null,null);t.default=e.exports}}]);