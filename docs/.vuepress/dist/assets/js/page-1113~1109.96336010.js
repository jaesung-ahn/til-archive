(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{756:function(a,_,t){"use strict";t.r(_);var v=t(2),s=Object(v.a)({},(function(){var a=this,_=a.$createElement,t=a._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"_1113-1109"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1113-1109"}},[a._v("#")]),a._v(" 1113 ~ 1109")]),a._v(" "),t("h2",{attrs:{id:"_1107-nosql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1107-nosql"}},[a._v("#")]),a._v(" 1107 - NoSQL")]),a._v(" "),t("h4",{attrs:{id:"nosql이란"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nosql이란"}},[a._v("#")]),a._v(" NoSQL이란?")]),a._v(" "),t("ul",[t("li",[a._v("NoSQL은 관계형 데이터베이스의 전통적인 구조 밖에서 데이터 저장 및 쿼리를 가능하게 하는 데이터베이스 설계 접근법")]),a._v(" "),t("li",[a._v("not only SQL / non-SQL")]),a._v(" "),t("li",[a._v("비관계형 데이터베이스")]),a._v(" "),t("li",[a._v("분산 데이터베이스의 한 유형")]),a._v(" "),t("li",[a._v("확장성이나 성능 등의 특성을 갖는 수많은 비관계형, 분산 데이터 베이스")]),a._v(" "),t("li",[a._v("관계형 데이터베이스와 비관계형 데이터베이스 중 무엇을 사용할지에 대한 결정은 크게 컨텍스트의 영향을 받으며, 적용사례에 따라 달라진다.")]),a._v(" "),t("li",[a._v("용어가 처음으로 등장한 것은 1998년 카를로 스트로찌(Carlo Strozzi)라는 엔지니어가 공개한 표준 SQL 인터페이스를 채용하지 않은 자신의 경량 Open Source 관계형 데이터베이스를 NoSQL이라고 명명한데서 유래")]),a._v(" "),t("li",[a._v("이후 2009년에는 요한 오스칼손(Johan Oskarsson)이라는 엔지니어가 Open Source기반의 분산 데이터베이스 관련 행사를 준비하면서 NoSQL이라는 용어를 사용")])]),a._v(" "),t("h5",{attrs:{id:"nosql-특징"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nosql-특징"}},[a._v("#")]),a._v(" NoSQL 특징")]),a._v(" "),t("ul",[t("li",[a._v("관계형 모델을 사용하지 않으며 테이블간의 조인 기능 없음")]),a._v(" "),t("li",[a._v("직접 프로그래밍을 하는 등의 비SQL 인터페이스를 통한 데이터 액세스")]),a._v(" "),t("li",[a._v("대부분 여러 대의 데이터베이스 서버를 묶어서(클러스터링) 하나의 데이터베이스를 구성")]),a._v(" "),t("li",[a._v("관계형 데이터베이스에서는 지원하는 Data처리 완결성(Transaction ACID 지원) 미보장")]),a._v(" "),t("li",[a._v("데이터의 스키마와 속성들을 다양하게 수용 및 동적 정의 (Schema-less)")]),a._v(" "),t("li",[a._v("데이터베이스의 중단 없는 서비스와 자동 복구 기능지원")]),a._v(" "),t("li",[a._v("다수가 Open Source로 제공")]),a._v(" "),t("li",[a._v("확장성, 가용성, 높은 성능")])]),a._v(" "),t("p",[a._v("=> NoSQL은 초고용량 데이터 처리 등 성능에 특화된 목적을 위해, 비관계형 데이터 저장소에, 비구조적인 데이터를 저장하기 위한 분산 저장 시스템")]),a._v(" "),t("h4",{attrs:{id:"유형"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#유형"}},[a._v("#")]),a._v(" 유형")]),a._v(" "),t("ul",[t("li",[a._v("Key-Value(키-값) DB\n"),t("ul",[t("li",[a._v("redis")]),a._v(" "),t("li",[a._v("riak")])])]),a._v(" "),t("li",[a._v("Document(도큐먼트) DB : JSON, XML과 같은 Collection 데이터 모델 구조를 채택\n"),t("ul",[t("li",[a._v("mongoDB")]),a._v(" "),t("li",[a._v("CouchDB")])])]),a._v(" "),t("li",[a._v("Wide-Columnar Store(와이드-컬럼) DB : Column Family 데이터 모델을 사용\n"),t("ul",[t("li",[a._v("HBASE")]),a._v(" "),t("li",[a._v("Cassandra")])])]),a._v(" "),t("li",[a._v("Graph(그래프) DB : Nodes, Relationship, Key-Value 데이터 모델을 채용\n"),t("ul",[t("li",[a._v("neo4j")]),a._v(" "),t("li",[a._v("OrientDB")])])])]),a._v(" "),t("h4",{attrs:{id:"속성-특성"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#속성-특성"}},[a._v("#")]),a._v(" 속성/특성")]),a._v(" "),t("h5",{attrs:{id:"nosql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nosql"}},[a._v("#")]),a._v(" NoSQL")]),a._v(" "),t("p",[a._v("가용성과 데이터 처리 성능 향상에 초점")]),a._v(" "),t("ul",[t("li",[a._v("BASE\n"),t("ul",[t("li",[a._v("Basically Available(가용성)")]),a._v(" "),t("li",[a._v("Soft State(소프트 상태)\n"),t("ul",[t("li",[a._v("각각의 데이터가 도달한 시점에 데이터가 갱신됨")])])]),a._v(" "),t("li",[a._v("Eventually Consistent(결과적 일관성)\n"),t("ul",[t("li",[a._v("복제가 동시에 실행될 수 없으나, 최종적으로는 모든 서버에 데이터가 복제됨")])])])])])]),a._v(" "),t("h5",{attrs:{id:"rdbms"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rdbms"}},[a._v("#")]),a._v(" RDBMS")]),a._v(" "),t("p",[a._v("데이터 일관성에 초점")]),a._v(" "),t("ul",[t("li",[a._v("ACID\n"),t("ul",[t("li",[a._v("Atomicity(원자성)\n"),t("ul",[t("li",[a._v("트랜잭션은 최소의 업무단위로 한 트랜잭션은 모두 처리되거나 또는 미처리 되어야 함")])])]),a._v(" "),t("li",[a._v("Consistency(일관성)\n"),t("ul",[t("li",[a._v("트랜잭션 성공 시 DB는 일관된 상태를 유지해야 함")])])]),a._v(" "),t("li",[a._v("Isolation(격리성)\n"),t("ul",[t("li",[a._v("실행 중인 트랜잭션의 중간에 다른 트랜잭션이 접근할 수 없음")])])]),a._v(" "),t("li",[a._v("Durability(영속성)\n"),t("ul",[t("li",[a._v("트랜잭션 성공 시 그 결과는 장애 발생 여부와 관계없이 DB에 저장되어야 함")])])])])])]),a._v(" "),t("br"),a._v(" "),t("h2",{attrs:{id:"_1116-oltp-olap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1116-oltp-olap"}},[a._v("#")]),a._v(" 1116 - OLTP/OLAP")]),a._v(" "),t("ul",[t("li",[a._v("DB 선택/설계시의 관점")])]),a._v(" "),t("h3",{attrs:{id:"oltp-on-line-transaction-processing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#oltp-on-line-transaction-processing"}},[a._v("#")]),a._v(" OLTP(On-Line Transaction Processing)")]),a._v(" "),t("h4",{attrs:{id:"정의"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#정의"}},[a._v("#")]),a._v(" 정의")]),a._v(" "),t("ul",[t("li",[a._v("'운영'계 데이터 및 데이터를 처리하는 방법을 의미")]),a._v(" "),t("li",[a._v("복수의 사용자 PC에서 발생되는 트랜잭션(Transaction)을 DB 서버가 처리, 그 결과를 요청한 사용자에게 결과값을 되돌려주는 과정")]),a._v(" "),t("li",[a._v("1개의 트랜잭션에서 발생되는 INSERT, UPDATE, DELETE를 무결성 보장하여 처리, 결과를 SELECT하는 과정")])]),a._v(" "),t("h4",{attrs:{id:"특징"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#특징"}},[a._v("#")]),a._v(" 특징")]),a._v(" "),t("ul",[t("li",[a._v("과거에는 주로 RDBMS 기반의 시스템을 근간으로 했으나 NoSQL도 운영계 데이터의 성격을 띤다면 OLTP로 분류 가능")]),a._v(" "),t("li",[a._v("현재 데이터가 처리가 얼마나 정확하고 무결한지가 중요")]),a._v(" "),t("li",[a._v("실질적인 데이터의 저장, 삭제, 수정 등의 작업을 의미")]),a._v(" "),t("li",[a._v("비교적 작은 규모의 트랜잭션들로 구성")]),a._v(" "),t("li",[a._v("CRUD와 관련된 쿼리들이 주를 이룸")]),a._v(" "),t("li",[a._v("전통적인 DBMS들이 주로 사용됨")]),a._v(" "),t("li",[a._v("데이터 간의 구조를 잘 정리하려고 노력")])]),a._v(" "),t("h3",{attrs:{id:"olap-on-line-analytical-processing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#olap-on-line-analytical-processing"}},[a._v("#")]),a._v(" OLAP(On-Line Analytical Processing)")]),a._v(" "),t("h4",{attrs:{id:"정의-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#정의-2"}},[a._v("#")]),a._v(" 정의")]),a._v(" "),t("ul",[t("li",[a._v("'분석'계 데이터 및 데이터를 처리하는 방법을 의미")]),a._v(" "),t("li",[a._v("데이터 웨어하우스 (DW), DB에 저장되어 있는 데이터를 분석, 사용자에게 유의미한 정보를 제공해주는 처리 방법")]),a._v(" "),t("li",[a._v("기존에 저장되어 있는 데이터를 사용자의 요구와 목적에 맞게 분석하여 정보를 제공하는 개념")])]),a._v(" "),t("h4",{attrs:{id:"특징-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#특징-2"}},[a._v("#")]),a._v(" 특징")]),a._v(" "),t("ul",[t("li",[a._v("분석을 통해 BI(Business Intelligence)와 연계하여 특정 지표 추출, 리포트 생산, 의사 결정에 도움")]),a._v(" "),t("li",[a._v("이미 저장된 데이터를 바탕으로 어떤 정보를 제공하는지가 중요")]),a._v(" "),t("li",[a._v("데이터가 무결, 정확하다는 전재 하에 정보를 어떤 식으로 표현하고 제공하는지를 의미")]),a._v(" "),t("li",[a._v("대용량 데이터를 취급")]),a._v(" "),t("li",[a._v("통계/집계 등의 복잡한 쿼리들이 주를 이룸")]),a._v(" "),t("li",[a._v("DW (Data Warehouse)를 구축")]),a._v(" "),t("li",[a._v("데이터가 어느 정도 중복이 되더라도 별 상관이 없으며 많은 데이터 수집이 필요")])]),a._v(" "),t("h4",{attrs:{id:"상호-보완적-관계"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#상호-보완적-관계"}},[a._v("#")]),a._v(" 상호 보완적 관계")]),a._v(" "),t("ul",[t("li",[a._v("OLTP와 OLAP를 두고 봤을 때 가장 선행되어야 할 부분은 OLTP (데이터 처리 과정 및 데이터 자체의 무결성 중요)")]),a._v(" "),t("li",[a._v("OLTP가 원천 데이터의 제공처이며 ETL 작업을 통해 OLAP에 데이터를 제공")])]),a._v(" "),t("br"),a._v(" "),t("h2",{attrs:{id:"mockbean-spybean"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mockbean-spybean"}},[a._v("#")]),a._v(" - @MockBean, @SpyBean")]),a._v(" "),t("h3",{attrs:{id:""}},[t("a",{staticClass:"header-anchor",attrs:{href:"#"}},[a._v("#")])]),a._v(" "),t("br"),a._v(" "),t("h2",{attrs:{id:"extendswith"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#extendswith"}},[a._v("#")]),a._v(" - @ExtendsWith")]),a._v(" "),t("h3",{attrs:{id:"-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[a._v("#")])]),a._v(" "),t("br"),a._v(" "),t("h2",{attrs:{id:"kapt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kapt"}},[a._v("#")]),a._v(" - kapt")]),a._v(" "),t("h3",{attrs:{id:"-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#-3"}},[a._v("#")])])])}),[],!1,null,null,null);_.default=s.exports}}]);