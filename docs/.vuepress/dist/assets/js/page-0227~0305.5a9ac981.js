(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{744:function(t,a,_){"use strict";_.r(a);var v=_(2),r=Object(v.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"_0227-0305"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_0227-0305"}},[t._v("#")]),t._v(" 0227 ~ 0305")]),t._v(" "),_("h2",{attrs:{id:"_0227-filter를-통한-logging"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_0227-filter를-통한-logging"}},[t._v("#")]),t._v(" 0227 - Filter를 통한 Logging")]),t._v(" "),_("h3",{attrs:{id:""}},[_("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),_("br"),t._v(" "),_("h2",{attrs:{id:"_0301-apm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_0301-apm"}},[t._v("#")]),t._v(" 0301 - APM")]),t._v(" "),_("p",[t._v("뭔지 왜쓰는지, 종류, 장단점")]),t._v(" "),_("br"),t._v(" "),_("h2",{attrs:{id:"_0302-템플릿-메소드-패턴-template-method-pattern"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_0302-템플릿-메소드-패턴-template-method-pattern"}},[t._v("#")]),t._v(" 0302 - 템플릿 메소드 패턴 (Template Method Pattern)")]),t._v(" "),_("blockquote",[_("p",[t._v("알고리즘의 일부 단계를 서브클래스에서 정의한다.")])]),t._v(" "),_("h3",{attrs:{id:"의도"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#의도"}},[t._v("#")]),t._v(" 의도")]),t._v(" "),_("h4",{attrs:{id:"의도-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#의도-2"}},[t._v("#")]),t._v(" "),_("strong",[t._v("[ 의도 ]")])]),t._v(" "),_("ul",[_("li",[t._v("GoF는 다음과 같이 이패턴의 의도를 설명한다.")])]),t._v(" "),_("blockquote",[_("p",[t._v("객체의 연산에는 알고리즘의 뼈대만을 정의하고 각 단계에서 수행할 구체적 처리는 서브클래스 쪽으로 미룹니다. 알고리즘의 구조 자체는 그대로 놔둔 채 알고리즘 각 단계 처리를 서브클래스에서 재정의할 수 있게합니다.")])]),t._v(" "),_("ul",[_("li",[t._v("실용주의 디자인 패턴에서는 이 패턴이 상속 기반의 프레임워크에서 사용된다고 설명한다.")])]),t._v(" "),_("blockquote",[_("p",[t._v("Template Method는 보통 상속 기반의 프레임워크에서 사용된다. 프레임워크는 작업의 90% 정도를 기반 클래스를 통해 제공하며, 애플리케이션에 용도에 맞게 맞춤화할 필요가 있는 부분은 추상 메소드로 남겨놓는다. 이 말은 곧 기반 클래스가 추상 템플릿 메소드를 호출한다는 의미이다. 사용자는 클래스를 상속하고 추상 메소드를 필요에 맞게 구현함으로써 프레임워크를 사용하게 된다.")])]),t._v(" "),_("ul",[_("li",[t._v("패턴을 활용한 리팩터링에서는 다음과 같이 설명한다.")])]),t._v(" "),_("blockquote",[_("p",[t._v("템플릿 메서드는 '알고리즘에서 불변적인 부분은 한 번만 구현하고 가변적인 동작은 서브클래스에서 구현할 수 있도록 남겨둔 것'을 말한다. 서브클래스에 불변적인 부분과 가변적인 부분이 뒤섞여 있다면, 불변적인 부분이 여러 서브클래스에서 중복될 것이다. 이런 코드를 Template Method 패턴으로 리팩터링하면, 불변적인 부분에 대한 구현은 한 곳에만, 즉 수퍼클래스 메서드 내의 일반화된 알고리즘에만 존재하게 되므로 코드 중복이 사라진다.")]),t._v(" "),_("p",[t._v("템플릿 메서드의 불변적 동작은 다음을 포함한다.")]),t._v(" "),_("ul",[_("li",[t._v("알고리즘을 구성하는 메서드 목록과 그 호출 순서")]),t._v(" "),_("li",[t._v("서브클래스가 꼭 오버라이드해야 할 추상 메서드")]),t._v(" "),_("li",[t._v("서브클래스가 오버라이드해도 되는 훅 메서드 hook method, 즉 구체 메서드")])])]),t._v(" "),_("h4",{attrs:{id:"용어"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#용어"}},[t._v("#")]),t._v(" "),_("strong",[t._v("[ 용어 ]")])]),t._v(" "),_("ul",[_("li",[t._v("템플릿 메소드\n"),_("ul",[_("li",[t._v("필수 처리 절차를 정의한 메소드")]),t._v(" "),_("li",[t._v("서브클래스가 오버라이드하는 추상 메소드들을 사용하여 알고리즘을 정의하는 메소드")])])]),t._v(" "),_("li",[t._v("훅 연산(hook operation)\n"),_("ul",[_("li",[t._v("필요하다면 서브클래스에서 확장할 수 있는 기본적인 행동을 제공하는 연산(메소드)")]),t._v(" "),_("li",[t._v("기본적으로는 아무 내용도 정의하지 않는다")])])])]),t._v(" "),_("h4",{attrs:{id:"구현-팁"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#구현-팁"}},[t._v("#")]),t._v(" "),_("strong",[t._v("[ 구현 팁 ]")])]),t._v(" "),_("ul",[_("li",[t._v("템플릿 메소드가 호출하는 메소드들을 템플릿 메소드만 호ㅜㄹ할 수 있게 하는 것을 고려한다.\n"),_("ul",[_("li",[_("code",[t._v("protected")]),t._v(" 접근 제한을 사용하면 된다")])])]),t._v(" "),_("li",[t._v("템플릿 메소드는 오버라이드할 수 없도록 구현하는 것을 고려한다.\n"),_("ul",[_("li",[t._v("Java라면 템플릿 메소드에 final을 달아주면 된다.")])])]),t._v(" "),_("li",[t._v("구현해야 하는 abstract 메소드의 수가 너무 많아지니 않도록 주의한다.")]),t._v(" "),_("li",[t._v("재정의할 abstract 메소드는 식별하기 쉽도록 접두사를 붙여주자\n"),_("ul",[_("li",[t._v("예를 들어 메소드 이름이 "),_("code",[t._v("Do")]),t._v("로 시작하도록 한다.")])])])]),t._v(" "),_("h3",{attrs:{id:"헤드-퍼스트-디자인-패턴의-예제"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#헤드-퍼스트-디자인-패턴의-예제"}},[t._v("#")]),t._v(" 헤드 퍼스트 디자인 패턴의 예제")]),t._v(" "),_("h3",{attrs:{id:"람다를-사용해-서브-클래스-제거하기"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#람다를-사용해-서브-클래스-제거하기"}},[t._v("#")]),t._v(" 람다를 사용해 서브 클래스 제거하기")]),t._v(" "),_("h3",{attrs:{id:"고려할-점들"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#고려할-점들"}},[t._v("#")]),t._v(" 고려할 점들")])])}),[],!1,null,null,null);a.default=r.exports}}]);